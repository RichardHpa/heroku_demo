name: 🚀 Build & deploy

on:
  push:
    branches:
      - '!main' # excludes main branch as it does its own check. Ideally should use this one but github actions don't support cross workflow checks yet

# The server and client jobs are pretty much the same as their individual workflows. Hopefully github will support cross workflow checks so we can just have them
jobs:
  server:
    name: Check Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: ⚡ Run vitest for server
        run: npm run test

  client:
    name: Check Client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: client

      - name: ⚡ Run vitest for client
        run: npm run test

  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      isNewerVersion: ${{ steps.compare.outputs.isNewerVersion }}
      versionType: ${{ steps.compare.outputs.versionType }}
      tag: ${{ steps.setTags.outputs.tag }}
    needs: [server, client]
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: 'Get current Package Version'
        id: PACKAGE_VERSION
        uses: martinbeentjes/npm-get-version-action@v1.2.3

      - name: Set PACKAGE_VERSION and tag
        id: setTags
        run: |
          echo "PACKAGE_VERSION=${{ steps.PACKAGE_VERSION.outputs.current-version }}" >> $GITHUB_ENV
          echo "::set-output name=tag::v${{ steps.PACKAGE_VERSION.outputs.current-version }}"

      - name: Compare the two versions
        uses: ./.github/actions/compare-versions
        id: compare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          currentVersion: ${{ env.PACKAGE_VERSION }}
