# name: 🚀 Build & deploy

# env:
#   REPO_NAME:

# on:
#   push:
#     branches:
#       - main

# # The server and client jobs are pretty much the same as their individual workflows. Hopefully github will support cross workflow checks so we can just have them
# jobs:
#   server:
#     name: Check Server
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.11.0

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: ⎔ Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x

#       - name: 📥 Download deps
#         uses: bahmutov/npm-install@v1
#         with:
#           useLockFile: false

#       - name: ⚡ Run vitest for server
#         run: npm run test

#   client:
#     name: Check Client
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: client
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.11.0

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: ⎔ Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x

#       - name: 📥 Download deps for Server
#         uses: bahmutov/npm-install@v1
#         with:
#           useLockFile: false

#       - name: 📥 Download deps for Client
#         uses: bahmutov/npm-install@v1
#         with:
#           useLockFile: false
#           working-directory: client

#       - name: ⚡ Run vitest for client
#         run: npm run test

#   prepare:
#     name: Prepare
#     runs-on: ubuntu-latest
#     outputs:
#       isNewerVersion: ${{ steps.compare.outputs.isNewerVersion }}
#       versionType: ${{ steps.compare.outputs.versionType }}
#       tag: ${{ steps.setTags.outputs.tag }}

#     needs: [server, client]
#     steps:
#       - name: Set ENV variables
#         run: |
#           echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.11.0

#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x

#       - name: 📥 Download deps
#         uses: bahmutov/npm-install@v1
#         with:
#           useLockFile: false

#       - name: 'Get current Package Version'
#         id: package-version
#         uses: martinbeentjes/npm-get-version-action@v1.3.1

#       - name: Set Tag
#         id: setTags
#         run: |
#           echo "::set-output name=tag::v${{ steps.package-version.outputs.current-version }}"

#       - name: Compare the two versions
#         uses: ./.github/actions/compare-versions
#         id: compare
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           currentVersion: ${{ steps.package-version.outputs.current-version  }}
#           repoName: ${{ env.REPO_NAME }}

#   deploy:
#     name: 'Deploy to Heroku'
#     runs-on: ubuntu-latest
#     needs: prepare
#     if: needs.prepare.outputs.isNewerVersion == 'true'
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.11.0

#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: Create a tag
#         uses: actions/github-script@v6
#         with:
#           script: |
#             github.rest.git.createRef({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               ref: 'refs/tags/${{ needs.prepare.outputs.tag }}',
#               sha: context.sha
#             })

#       - name: Create a Release
#         uses: actions/create-release@v1
#         id: create_release
#         with:
#           tag_name: ${{ needs.prepare.outputs.tag }}
#           release_name: ${{ needs.prepare.outputs.tag }}
#           draft: false
#           prerelease: false
#           body: |
#             Automated via `./github/workflows/heroku-deploy.yml`

#             - Author: **@${{ github.actor }}**
#             - Version: `${{ needs.prepare.outputs.tag }}`
#             - Release Type: `${{ needs.prepare.outputs.versionType }}`
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Deploy to Heroku
#         uses: akhileshns/heroku-deploy@v3.12.12 # This action deploys the content on Heroku
#         with:
#           heroku_api_key: ${{secrets.HEROKU_API_KEY}} #The Heroku api key we stored on our repo secret
#           heroku_app_name: 'ptcgstandingsapi' #The name of your heroku app - Must be unique in Heroku
#           heroku_email: 'richard.m.hpa@gmail.com' #Your heroku user name
